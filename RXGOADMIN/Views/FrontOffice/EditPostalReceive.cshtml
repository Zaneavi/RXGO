@model RXGOADMIN.Models.PostalReceive
@{
    ViewBag.Title = "EditPostalReceive";
    var Info = Model;
}

<link rel="icon" type="image/png" sizes="16x16" href="~/Assets/assets/images/favicon.png">
<title>RXGO ADMIN</title>
<!-- Custom CSS -->
<link href="~/Assets/assets/libs/flot/css/float-chart.css" rel="stylesheet">
<!-- Custom CSS -->
<link href="~/Assets/dist/css/style.min.css" rel="stylesheet">
<link href="~/Assets/assets/libs/datatables.net-bs4/css/dataTables.bootstrap4.css" rel="stylesheet">
<!-----Dropify part ---->
<link href='http://fonts.googleapis.com/css?family=Roboto:400,300,700,900|Roboto+Condensed:400,300,700' rel='stylesheet' type='text/css'>
<link rel="stylesheet" href="~/Assets/dist/css/demo.css">
<link rel="stylesheet" href="~/Assets/dist/css/dropify.min.css">
<!-----end dropify------>
<!-- The Modal -->
<!-- Modal Header -->
<div class="modal-header">
    <h4 class="modal-title">Edit Receive</h4>
    <button type="button" class="close" data-dismiss="modal">&times;</button>
</div>

<div class="modal-body">
    <div class="page-breadcrumb">
        <div class="card">
            @using (Html.BeginForm("PostalReceive", "FrontOffice", FormMethod.Post, new { @class = "form-sample", enctype = "multipart/form-data" }))
            {
                <div class="card-body">
                    <div class="row">
                        @Html.HiddenFor(model => model.Id)

                        <div class="col-md-6">
                            <div class="form-group">
                                <label>
                                    From Ttile *
                                </label>
                                <div class="input-group">
                                    @Html.TextBoxFor(model => model.FromTitle, new { @required = "required", @class = "form-control", @type = "text", @maxlength = "100" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>
                                    Reference No
                                </label>
                                <div class="input-group">
                                    @Html.TextBoxFor(model => model.ReferenceNo, new { @required = "required", @class = "form-control", @type = "text", @maxlength = "100" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>
                                    Address
                                </label>
                                <div class="input-group">
                                    @Html.TextAreaFor(model => model.Address, new { @class = "form-control", @type = "text", @maxlength = "100" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>
                                    Note
                                </label>
                                <div class="input-group">
                                    @Html.TextAreaFor(model => model.Note, new { @class = "form-control", @type = "text", @maxlength = "100" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>
                                    To Title
                                </label>
                                <div class="input-group">
                                    @Html.TextBoxFor(model => model.ToTitle, new { @class = "form-control", @type = "text", @maxlength = "100" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>
                                    Date
                                </label>
                                <div class="input-group">
                                    @Html.TextBoxFor(model => model.Date, new { @class = "form-control", @type = "text", @readonly = "readonly", @Value = @DateTime.Now.ToShortDateString() })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>
                                    Attach Document
                                </label>
                                <div class="input-group">
                                    @Html.TextBoxFor(model => model.Attachment, new { @class = "dropify", @type = "file" })
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="border-top">
                    <div class="card-body">
                        <button type="submit" class="btn btn-success">Update</button>
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Modal footer -->
    <div class="modal-footer">
        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
    </div>

</div>

<script src="~/Assets/assets/libs/jquery/dist/jquery.min.js"></script>
<!-- Bootstrap tether Core JavaScript -->
<script src="~/Assets/assets/libs/popper.js/dist/umd/popper.min.js"></script>
<script src="~/Assets/assets/libs/bootstrap/dist/js/bootstrap.min.js"></script>
<script src="~/Assets/assets/libs/perfect-scrollbar/dist/perfect-scrollbar.jquery.min.js"></script>
<script src="~/Assets/assets/extra-libs/sparkline/sparkline.js"></script>
<!--Wave Effects -->
<script src="~/Assets/dist/js/waves.js"></script>
<!--Menu sidebar -->
<script src="~/Assets/dist/js/sidebarmenu.js"></script>
<!--Custom JavaScript -->
<script src="~/Assets/dist/js/custom.min.js"></script>
<!----Dropify---->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
<script src="~/Assets/dist/js/dropify.min.js"></script>
<script>
            $(document).ready(function(){
                // Basic
                $('.dropify').dropify();

                // Translated
                $('.dropify-fr').dropify({
                    messages: {
                        default: 'Glissez-déposez un fichier ici ou cliquez',
                        replace: 'Glissez-déposez un fichier ou cliquez pour remplacer',
                        remove:  'Supprimer',
                        error:   'Désolé, le fichier trop volumineux'
                    }
                });

                // Used events
                var drEvent = $('#input-file-events').dropify();

                drEvent.on('dropify.beforeClear', function(event, element){
                    return confirm("Do you really want to delete \"" + element.file.name + "\" ?");
                });

                drEvent.on('dropify.afterClear', function(event, element){
                    alert('File deleted');
                });

                drEvent.on('dropify.errors', function(event, element){
                    console.log('Has Errors');
                });

                var drDestroy = $('#input-file-to-destroy').dropify();
                drDestroy = drDestroy.data('dropify')
                $('#toggleDropify').on('click', function(e){
                    e.preventDefault();
                    if (drDestroy.isDropified()) {
                        drDestroy.destroy();
                    } else {
                        drDestroy.init();
                    }
                })
            });
</script>